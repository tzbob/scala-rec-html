package rec.syntax

import rec.Html._
import rec.NodeList.NodeList
import rec.ReadList.ReadList
import rec.{Attr, Html, RecordConcat}
import shapeless.HList

trait Tags {
  private def element[R1 <: HList,
                     R2 <: HList,
                     Reads <: HList]
      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2], str: String)(implicit recordConcat: RecordConcat[R1, R2, Reads]): Html[Reads] =
    Element(str, attrs, readList, nodeList)

  // From https://github.com/lihaoyi/scalatags/blob/master/scalatags/src/scalatags/vdom/Tags.scala
  def html[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "html")
  def head[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "head")
  def base[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "base")
  def link[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "link")
  def meta[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "meta")
  def script[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "script")
  def body[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "body")
  def h1[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h1")
  def h2[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h2")
  def h3[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h3")
  def h4[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h4")
  def h5[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h5")
  def h6[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "h6")
  def header[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "header")
  def footer[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "footer")
  def p[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "p")
  def hr[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "hr")
  def pre[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "pre")
  def blockquote[R1 <: HList, R2 <: HList, Reads <: HList](attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "blockquote")
  def ol[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "ol")
  def ul[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "ul")
  def li[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "li")
  def dl[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "dl")
  def dt[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "dt")
  def dd[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "dd")
  def figure[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "figure")
  def figcaption[R1 <: HList, R2 <: HList, Reads <: HList](attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "figcaption")
  def div[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "div")
  def a[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "a")
  def em[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "em")
  def strong[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "strong")
  def small[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "small")
  def s[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "s")
  def cite[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "cite")
  def code[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "code")
  def sub[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "sub")
  def sup[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "sup")
  def i[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "i")
  def b[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "b")
  def u[R1 <: HList, R2 <: HList, Reads <: HList]         (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "u")
  def span[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "span")
  def br[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "br")
  def wbr[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "wbr")
  def ins[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "ins")
  def del[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "del")
  def img[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "img")
  def iframe[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "iframe")
  def embed[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "embed")
  def `object`[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "object")
  def param[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "param")
  def video[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "video")
  def audio[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "audio")
  def source[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "source")
  def track[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "track")
  def canvas[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "canvas")
  def map[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "map")
  def area[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "area")
  def table[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "table")
  def caption[R1 <: HList, R2 <: HList, Reads <: HList]   (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "caption")
  def colgroup[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "colgroup")
  def col[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "col")
  def tbody[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "tbody")
  def thead[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "thead")
  def tfoot[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "tfoot")
  def tr[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "tr")
  def td[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "td")
  def th[R1 <: HList, R2 <: HList, Reads <: HList]        (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "th")
  def form[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "form")
  def fieldset[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "fieldset")
  def legend[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "legend")
  def label[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "label")
  def input[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "input")
  def button[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "button")
  def select[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "select")
  def datalist[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "datalist")
  def optgroup[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "optgroup")
  def option[R1 <: HList, R2 <: HList, Reads <: HList]    (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "option")
  def textarea[R1 <: HList, R2 <: HList, Reads <: HList]  (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "textarea")
  def section[R1 <: HList, R2 <: HList, Reads <: HList]   (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "section")
  def nav[R1 <: HList, R2 <: HList, Reads <: HList]       (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "nav")
  def article[R1 <: HList, R2 <: HList, Reads <: HList]   (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "article")
  def aside[R1 <: HList, R2 <: HList, Reads <: HList]     (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "aside")
  def address[R1 <: HList, R2 <: HList, Reads <: HList]   (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "address")
  def menu[R1 <: HList, R2 <: HList, Reads <: HList]      (attrs: Seq[Attr], readList: ReadList[R1], nodeList: NodeList[R2])(implicit recordConcat: RecordConcat[R1 ,R2, Reads]): Html[Reads] = element(attrs, readList, nodeList, "menu")
}
